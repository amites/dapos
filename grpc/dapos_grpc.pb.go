// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/dapos_grpc.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	grpc/dapos_grpc.proto

It has these top-level messages:
	Transaction
	TransactionResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction struct {
	Hash       []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	From       string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	To         string `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	Value      int64  `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Time       int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	DelegateId int64  `protobuf:"varint,6,opt,name=delegateId" json:"delegateId,omitempty"`
	Type       int64  `protobuf:"varint,7,opt,name=type" json:"type,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto1.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Transaction) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Transaction) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Transaction) GetDelegateId() int64 {
	if m != nil {
		return m.DelegateId
	}
	return 0
}

func (m *Transaction) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type TransactionResponse struct {
	T *Transaction `protobuf:"bytes,1,opt,name=t" json:"t,omitempty"`
}

func (m *TransactionResponse) Reset()                    { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string            { return proto1.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()               {}
func (*TransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransactionResponse) GetT() *Transaction {
	if m != nil {
		return m.T
	}
	return nil
}

func init() {
	proto1.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto1.RegisterType((*TransactionResponse)(nil), "proto.TransactionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DAPoSService service

type DAPoSServiceClient interface {
	BroadcastTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error)
	ReceiveTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error)
}

type dAPoSServiceClient struct {
	cc *grpc.ClientConn
}

func NewDAPoSServiceClient(cc *grpc.ClientConn) DAPoSServiceClient {
	return &dAPoSServiceClient{cc}
}

func (c *dAPoSServiceClient) BroadcastTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSService/BroadcastTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAPoSServiceClient) ReceiveTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSService/ReceiveTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DAPoSService service

type DAPoSServiceServer interface {
	BroadcastTransaction(context.Context, *Transaction) (*TransactionResponse, error)
	ReceiveTransaction(context.Context, *Transaction) (*TransactionResponse, error)
}

func RegisterDAPoSServiceServer(s *grpc.Server, srv DAPoSServiceServer) {
	s.RegisterService(&_DAPoSService_serviceDesc, srv)
}

func _DAPoSService_BroadcastTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSServiceServer).BroadcastTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSService/BroadcastTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSServiceServer).BroadcastTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAPoSService_ReceiveTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSServiceServer).ReceiveTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSService/ReceiveTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSServiceServer).ReceiveTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

var _DAPoSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DAPoSService",
	HandlerType: (*DAPoSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BroadcastTransaction",
			Handler:    _DAPoSService_BroadcastTransaction_Handler,
		},
		{
			MethodName: "ReceiveTransaction",
			Handler:    _DAPoSService_ReceiveTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/dapos_grpc.proto",
}

func init() { proto1.RegisterFile("grpc/dapos_grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x8f, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xdd, 0xb4, 0xa9, 0x38, 0x2d, 0x1e, 0xc6, 0x0a, 0x4b, 0x0f, 0x12, 0x72, 0xca, 0xa9,
	0x42, 0x3d, 0x78, 0x56, 0x44, 0xf4, 0x26, 0xa9, 0x77, 0x59, 0x37, 0x63, 0x1b, 0x68, 0x33, 0xcb,
	0xee, 0x1a, 0xe8, 0xdb, 0x08, 0xbe, 0xa8, 0x64, 0xda, 0x43, 0x44, 0x6f, 0x3d, 0xed, 0xbf, 0xdf,
	0xec, 0x37, 0x3b, 0x03, 0x97, 0x2b, 0xef, 0xec, 0x75, 0x65, 0x1c, 0x87, 0xb7, 0x2e, 0xce, 0x9d,
	0xe7, 0xc8, 0x98, 0xca, 0x91, 0x7f, 0x2b, 0x18, 0xbf, 0x7a, 0xd3, 0x04, 0x63, 0x63, 0xcd, 0x0d,
	0x22, 0x0c, 0xd7, 0x26, 0xac, 0xb5, 0xca, 0x54, 0x31, 0x29, 0x25, 0x77, 0xec, 0xc3, 0xf3, 0x56,
	0x27, 0x99, 0x2a, 0xce, 0x4a, 0xc9, 0x78, 0x0e, 0x49, 0x64, 0x3d, 0x10, 0x92, 0x44, 0xc6, 0x29,
	0xa4, 0xad, 0xd9, 0x7c, 0x92, 0x1e, 0x66, 0xaa, 0x18, 0x94, 0xfb, 0x4b, 0x67, 0xc6, 0x7a, 0x4b,
	0x3a, 0x15, 0x28, 0x19, 0xaf, 0x00, 0x2a, 0xda, 0xd0, 0xca, 0x44, 0x7a, 0xae, 0xf4, 0x48, 0x2a,
	0x3d, 0x22, 0xce, 0xce, 0x91, 0x3e, 0x3d, 0x38, 0x3b, 0x47, 0xf9, 0x2d, 0x5c, 0xf4, 0x86, 0x2c,
	0x29, 0x38, 0x6e, 0x02, 0x61, 0x06, 0x2a, 0xca, 0xa4, 0xe3, 0x05, 0xee, 0xd7, 0x9a, 0xf7, 0x9f,
	0xa9, 0xb8, 0xf8, 0x52, 0x30, 0x79, 0xb8, 0x7b, 0xe1, 0xe5, 0x92, 0x7c, 0x5b, 0x5b, 0xc2, 0x27,
	0x98, 0xde, 0x7b, 0x36, 0x95, 0x35, 0x21, 0xfe, 0xda, 0xfb, 0xaf, 0x3f, 0x9b, 0xfd, 0xd3, 0xf3,
	0xf0, 0x75, 0x7e, 0x82, 0x8f, 0x80, 0x25, 0x59, 0xaa, 0x5b, 0x3a, 0xaa, 0xcf, 0xfb, 0x48, 0x8a,
	0x37, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x38, 0x53, 0xe1, 0x1d, 0xa8, 0x01, 0x00, 0x00,
}
