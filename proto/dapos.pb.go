// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/dapos.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/dapos.proto

It has these top-level messages:
	Transaction
	TransactionResponse
	TestNode
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction struct {
	Hash       []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	From       []byte `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To         []byte `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value      int64  `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Time       int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	DelegateId int64  `protobuf:"varint,6,opt,name=delegateId" json:"delegateId,omitempty"`
	Type       int64  `protobuf:"varint,7,opt,name=type" json:"type,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto1.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Transaction) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Transaction) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Transaction) GetDelegateId() int64 {
	if m != nil {
		return m.DelegateId
	}
	return 0
}

func (m *Transaction) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type TransactionResponse struct {
	T *Transaction `protobuf:"bytes,1,opt,name=t" json:"t,omitempty"`
}

func (m *TransactionResponse) Reset()                    { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string            { return proto1.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()               {}
func (*TransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransactionResponse) GetT() *Transaction {
	if m != nil {
		return m.T
	}
	return nil
}

type TestNode struct {
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Balance int64  `protobuf:"varint,3,opt,name=balance" json:"balance,omitempty"`
}

func (m *TestNode) Reset()                    { *m = TestNode{} }
func (m *TestNode) String() string            { return proto1.CompactTextString(m) }
func (*TestNode) ProtoMessage()               {}
func (*TestNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TestNode) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *TestNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestNode) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto1.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto1.RegisterType((*TransactionResponse)(nil), "proto.TransactionResponse")
	proto1.RegisterType((*TestNode)(nil), "proto.TestNode")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DAPoSGrpc service

type DAPoSGrpcClient interface {
	BroadcastTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error)
	ReceiveTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error)
	RegisterTestNode(ctx context.Context, in *TestNode, opts ...grpc.CallOption) (*TransactionResponse, error)
}

type dAPoSGrpcClient struct {
	cc *grpc.ClientConn
}

func NewDAPoSGrpcClient(cc *grpc.ClientConn) DAPoSGrpcClient {
	return &dAPoSGrpcClient{cc}
}

func (c *dAPoSGrpcClient) BroadcastTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/BroadcastTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAPoSGrpcClient) ReceiveTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/ReceiveTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAPoSGrpcClient) RegisterTestNode(ctx context.Context, in *TestNode, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/proto.DAPoSGrpc/RegisterTestNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DAPoSGrpc service

type DAPoSGrpcServer interface {
	BroadcastTransaction(context.Context, *Transaction) (*TransactionResponse, error)
	ReceiveTransaction(context.Context, *Transaction) (*TransactionResponse, error)
	RegisterTestNode(context.Context, *TestNode) (*TransactionResponse, error)
}

func RegisterDAPoSGrpcServer(s *grpc.Server, srv DAPoSGrpcServer) {
	s.RegisterService(&_DAPoSGrpc_serviceDesc, srv)
}

func _DAPoSGrpc_BroadcastTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).BroadcastTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/BroadcastTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).BroadcastTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAPoSGrpc_ReceiveTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).ReceiveTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/ReceiveTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).ReceiveTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAPoSGrpc_RegisterTestNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAPoSGrpcServer).RegisterTestNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DAPoSGrpc/RegisterTestNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAPoSGrpcServer).RegisterTestNode(ctx, req.(*TestNode))
	}
	return interceptor(ctx, in, info, handler)
}

var _DAPoSGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DAPoSGrpc",
	HandlerType: (*DAPoSGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BroadcastTransaction",
			Handler:    _DAPoSGrpc_BroadcastTransaction_Handler,
		},
		{
			MethodName: "ReceiveTransaction",
			Handler:    _DAPoSGrpc_ReceiveTransaction_Handler,
		},
		{
			MethodName: "RegisterTestNode",
			Handler:    _DAPoSGrpc_RegisterTestNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/dapos.proto",
}

func init() { proto1.RegisterFile("proto/dapos.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x50, 0xcb, 0x4e, 0x02, 0x41,
	0x10, 0x74, 0x78, 0x4a, 0x63, 0x7c, 0xb4, 0x1c, 0x26, 0x1c, 0x0c, 0xd9, 0x13, 0x27, 0x4c, 0xf0,
	0xe0, 0x19, 0x63, 0x7c, 0x5c, 0x8c, 0x19, 0xf9, 0x81, 0x66, 0xa7, 0x85, 0x4d, 0x60, 0x67, 0x33,
	0x33, 0x92, 0xf0, 0x3d, 0xfe, 0x98, 0x9f, 0x62, 0xb6, 0x59, 0x0c, 0x46, 0xe3, 0xc5, 0xd3, 0x56,
	0x55, 0x77, 0xf5, 0x56, 0x0d, 0x9c, 0x15, 0xde, 0x45, 0x77, 0x69, 0xa9, 0x70, 0x61, 0x24, 0x18,
	0x9b, 0xf2, 0x49, 0xde, 0x15, 0x74, 0xa7, 0x9e, 0xf2, 0x40, 0x69, 0xcc, 0x5c, 0x8e, 0x08, 0x8d,
	0x05, 0x85, 0x85, 0x56, 0x03, 0x35, 0x3c, 0x32, 0x82, 0x4b, 0xed, 0xd5, 0xbb, 0x95, 0xae, 0x6d,
	0xb5, 0x12, 0xe3, 0x31, 0xd4, 0xa2, 0xd3, 0x75, 0x51, 0x6a, 0xd1, 0x61, 0x0f, 0x9a, 0x6b, 0x5a,
	0xbe, 0xb1, 0x6e, 0x0c, 0xd4, 0xb0, 0x6e, 0xb6, 0xa4, 0x74, 0xc6, 0x6c, 0xc5, 0xba, 0x29, 0xa2,
	0x60, 0xbc, 0x00, 0xb0, 0xbc, 0xe4, 0x39, 0x45, 0x7e, 0xb4, 0xba, 0x25, 0x93, 0x3d, 0x45, 0x3c,
	0x9b, 0x82, 0x75, 0xbb, 0xf2, 0x6c, 0x0a, 0x4e, 0xae, 0xe1, 0x7c, 0x2f, 0xa4, 0xe1, 0x50, 0xb8,
	0x3c, 0x30, 0x0e, 0x40, 0x45, 0x49, 0xda, 0x1d, 0xe3, 0xb6, 0xd6, 0x68, 0x7f, 0x4d, 0xc5, 0xc4,
	0xc0, 0xe1, 0x94, 0x43, 0x7c, 0x72, 0x96, 0x51, 0x43, 0x9b, 0xac, 0xf5, 0x1c, 0x42, 0xd5, 0x6e,
	0x47, 0xcb, 0x5f, 0xe6, 0xb4, 0x62, 0x29, 0xd8, 0x31, 0x82, 0xcb, 0xed, 0x19, 0x2d, 0x29, 0x4f,
	0x59, 0x5a, 0xd6, 0xcd, 0x8e, 0x8e, 0x3f, 0x14, 0x74, 0x6e, 0x27, 0xcf, 0xee, 0xe5, 0xde, 0x17,
	0x29, 0x3e, 0x40, 0xef, 0xc6, 0x3b, 0xb2, 0x29, 0x85, 0xf8, 0xed, 0x21, 0x7f, 0x06, 0xea, 0xf7,
	0x7f, 0x09, 0x59, 0x75, 0x49, 0x0e, 0xf0, 0x0e, 0xd0, 0x70, 0xca, 0xd9, 0x9a, 0xff, 0x77, 0x67,
	0x02, 0xa7, 0x86, 0xe7, 0x59, 0x88, 0xec, 0xbf, 0xba, 0x9f, 0xec, 0x1c, 0x95, 0xf0, 0xf7, 0x89,
	0x59, 0x4b, 0x86, 0x57, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0x32, 0x86, 0x5c, 0x38, 0x02,
	0x00, 0x00,
}
